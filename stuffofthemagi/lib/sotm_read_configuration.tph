/* =============================================================== *
 *                                                                 *
 *                 READING INI CONGIGURATION FILES                 *
 *                                                                 *
 * =============================================================== */

/* ============================================================================================== *
 *  MACRO GW_READ_INI_FILE : READS an .ini file (lit un fichier .ini).                            *
 * ----------------------------------------------------------------------------------------+----- *
 *  This WeiDU action macro reads the configuration options values set in "ini_to_read.ini" file  *
 *  and writes them into sotm_ini_var.                                                            *
 *  ini key values are treated case-insensitive.                                                  *
 *  (Wrote for Kjeron but borrowed from CamDawg's most efficient version).                        *
 * ============================================================================================== */

DEFINE_ACTION_MACRO ~GW_READ_INI_FILE~
BEGIN

	LOCAL_SPRINT key ""
	ACTION_IF FILE_EXISTS "%ini_to_read%" BEGIN
		COPY - ~%ini_to_read%~ ~override~
			REPLACE_EVALUATE ~^\([^ %TAB%%WNL%]+\) *= *\([^%WNL%$]+\)~
				BEGIN
				// key must start line and cannot contain whitespace
				// value is everything after the "=" until the newline/end
					SPRINT key "%MATCH1%"
					TO_LOWER key
					TEXT_SPRINT $sotm_ini_var(~%key%~) ~%MATCH2%~
				END
			~~
		END

END


/* ============================================================== *
 *  FUNCTION check_ini : CHECKS an ini value (case-insensitive).  *
 * -------------------------------------------------------------- *
 *  Borrowed from CamDawg.                                        *
 * ============================================================== */

DEFINE_PATCH_FUNCTION ~check_ini~
	STR_VAR ini=""
	RET value
BEGIN

	TO_LOWER ini
	PATCH_IF !VARIABLE_IS_SET $sotm_ini_var(~%ini%~) BEGIN
		SPRINT value 0
//		SPRINT value 4
	END ELSE BEGIN
		SPRINT value $sotm_ini_var(~%ini%~)
	END

END

DEFINE_ACTION_FUNCTION ~check_ini~
	STR_VAR ini=""
	RET value
BEGIN

	OUTER_PATCH "" BEGIN
		LPF ~check_ini~ STR_VAR ini RET value END
	END

END


/* ================================================================================================================== *
 *  MACRO GW_CHECK_CONFIG_VARIABLES : CHECKS configuration options values validity.                                   *
 *                                    VÉRIFIE la validité des options de configuration.                               *
 * ------------------------------------------------------------------------------------------------------------------ *
 *  Cette macro vérifie que la valeurs des options de configuration des fichiers %configuration-default%.ini et       *
 *  %configuration-user%.ini sont présentes et conformes ; sinon, leur assigne leur valeur par défaut (définie        *
 *  dans l'array sotm_ini_variables_check).                                                                           *
 * ------------------------------------------------------------------------------------------------------------------ *
 *  This macro checks if configuration option values (in %configuration-default.ini% & %configuration-user.ini)% are  *
 *  set and not mismatched. If not, it will revert them to their default values (sotm_ini_variables_check array).     *
 * ================================================================================================================== */

ACTION_CLEAR_ARRAY sotm_variables_check
ACTION_DEFINE_ASSOCIATIVE_ARRAY sotm_variables_check BEGIN
//  VARIABLE          VALUES : MIN	MAX => DEFAULT
	force_tra_rebuild,			0,	1	=> 0
	use,						1,	2	=> 1
	equip,						1,	2	=> 1
END

DEFINE_ACTION_MACRO ~GW_CHECK_CONFIG_VARIABLES~
BEGIN

	ACTION_PHP_EACH sotm_variables_check AS variable => default BEGIN
		ACTION_IF (VARIABLE_IS_SET $sotm_ini_var("sotm_%variable_0%")) BEGIN
			ACTION_IF (NOT(IS_AN_INT $sotm_ini_var("sotm_%variable_0%")) || ($sotm_ini_var("sotm_%variable_0%") < %variable_1%) || ($sotm_ini_var("sotm_%variable_0%") > %variable_2%)) BEGIN
				OUTER_TEXT_SPRINT wrong_value $sotm_ini_var("sotm_%variable_0%")
				OUTER_TEXT_SPRINT $sotm_ini_var("sotm_%variable_0%") "%default%"
				OUTER_SET value = $sotm_ini_var("sotm_%variable_0%")
				PRINT @1011 // ~Configuration option sotm_%variable_0% value (%wrong_value%) does not match its scope and has been reset to its default value (%default%).~
			END ELSE BEGIN
				OUTER_SET value = $sotm_ini_var("sotm_%variable_0%")
			END
		END ELSE BEGIN	// variable is not set
			OUTER_TEXT_SPRINT $sotm_ini_var("sotm_%variable_0%") "%default%"
			OUTER_SET value = $sotm_ini_var("sotm_%variable_0%")
			PRINT @1012 // ~Configuration option sotm_%variable_0% does not exist: it has been set to its default value (%default%).~
		END
		OUTER_SET EVAL "sotm_%variable_0%" = value

LAF ~check_ini~ STR_VAR ini = EVAL "sotm_%variable_0%" RET var = value END
PRINT "sotm_%variable_0% = %var%"
	END
	ACTION_CLEAR_ARRAY sotm_variables_check

END	// of DEFINE_ACTION_MACRO
